#!/usr/bin/env bash

usage () {
    printf "Usage: ./configure [options]\n\n"
    printf "Options:\n"
    printf "  --device='name'       Backlight device name (default: intel_backlight)\n"
    printf "  --devpath='path'      Backlight device search path (default: /sys/class/backlight)\n"
    printf "  --thresh-top='spec'   Maximum brightness threshold (default: 100%%)\n"
    printf "  --thresh-bot='spec'   Minimum brightness threshold (default: 0)\n"
    printf "  --reset-config        Reset configuration to the defaults\n"
}

update () {
    sed -i ./src/enlighten.h -re "s/(define $1)(\s*)\"(.*)\"$/\\1\\2\"$2\"/"
}

default_config () {
    update D_DEV 'intel_backlight'
    update BASEPATH "/sys/class/backlight"
    update THRESH_TOP "100%"
    update THRESH_BOT "0"
}

show_value () {
    printf "$1: %s\n" "$('grep' "#define $2" ./src/enlighten.h | sed -re "s/#define $2\s*(.*)$/\\1/")"
}

show_config () {
    show_value 'Device Name' D_DEV
    show_value 'Device Search Path' BASEPATH
    show_value 'Maximum Brightness Threshold' THRESH_TOP
    show_value 'Minimum Brightness Threshold' THRESH_BOT
}

check_file () {
    [[ -f "$1" ]] && fnd='\x1b[32mY' || fnd='\x1b[31m\x1b[1mN';
    printf 'Found %-*s\t[ %b\x1b[0m ]\n' "$2" "$1:" "$fnd"
    [[ -f "$1" ]] || exit 1
}

def_cflags=(-g -O3 -fPIE -pie -D_FORTIFY_SOURCE=2 -fstack-protector-strong
            --param=ssp-buffer-size=1 -Weverything -Werror -std=c11 -ggdb
            -flto -fsanitize=undefined -fsanitize-trap=undefined
            -Wl,-z,relro,-z,now -Wno-disabled-macro-expansion)

check_deps () {
    CC=${CC:-clang}

    pushd ./src &> /dev/null
    hdrs=($($CC -M enlighten.c | sed -e 's|.*:||' -e 's|\\||' | tr -d '\n'))

    len=0
    for i in make "$CC" mkdir install rm "${hdrs[@]}" "$def_cflags[@]"; do
        if (( "${#i}" > len )); then
            len="${#i}"
        fi
    done

    for i in make "$(which "$CC")" mkdir install rm; do
        [[ "$(which "$i" &> /dev/null; echo $?)" == 0 ]] && {
            check_file "$(which "$i")" "$len"
        } || check_file "$i" "$len"
    done

    for i in "${hdrs[@]}"; do
        if [[ "$i" != *'.h' || "$i" == *'bits'* ]]; then
            continue
        fi

        fh=$($CC -c -o tm -x c - <<< "#include \"$i\"" &> /dev/null; echo $?)
        [[ "$fh" == 0 ]] && {
            fnd='\x1b[32mY'; [[ -f "tm" ]] && rm -- tm
        } || fnd='\x1b[31m\x1b[1mN'

        printf 'Found %-*s\t[ %b\x1b[0m ]\n' "$len" "$i:" "$fnd"
        [[ "$fh" != 0 ]] && exit 1
    done

    for i in "${def_cflags[@]}"; do
        fc=$($CC -c -o tm -x c - "$i" <<< "#include <stdio.h>" &> /dev/null; echo $?)
        [[ "$fc" == 0 ]] && {
            fnd='\x1b[32mY'; [[ -f "tm" ]] && rm -- tm
        } || fnd='\x1b[31m\x1b[1mN'

        printf 'Found %-*s\t[ %b\x1b[0m ]\n' "$len" "$i:" "$fnd"
        [[ "$fc" != 0 ]] && exit 1
    done

    popd &> /dev/null
}

for i in "$@"; do
    case "$i" in
        --help)         usage; exit 0;;
        --device=*)     update D_DEV "${i#*=}"; shift;;
        --devpath=*)    update BASEPATH "${i#*=}"; shift;;
        --thresh-top=*) update THRESH_TOP "${i#*=}"; shift;;
        --thresh-bot=*) update THRESH_BOT "${i#*=}"; shift;;
        --reset-config) default_config;;
    esac
done

show_config
check_deps
